// -- vars
$font-size: 16px;
$default-size: 5.5 * $font-size;
$default-outline: 10;
$label-font-size: $default-size * 0.42;
$label-font-size-redo: $default-size * 1;
$posColor: #7DDE6D;
$negColor: #e2370c;
$score: 60;
$animation-duration: 1s;
$animation-ease: cubic-bezier(0.32, 0.29, 0.1, 0.92);

@mixin size($width, $height) {
    height: $height;
    width: $width;
}

// -- selectors
*,
*:before,
*:after {
    box-sizing: border-box;
}

.pie-wrapper {

    @include size($default-size, $default-size);
    position: relative;
    font-family: oswaldFont;
    font-weight: bold;

    .pie {

        @include size(100%, 100%);
        clip: rect(0, $default-size, $default-size, $default-size / 2);
        left: 0;
        position: absolute;
        top: 0;

        .half-circle {
            @include size(100%, 100%);
            border: ($default-size / $default-outline) solid #3498db;
            border-radius: 50%;
            clip: rect(0, $default-size / 2, $default-size, 0);
            left: 0;
            position: absolute;
            top: 0;

        }

    }

    .label {

        border-radius: 50%;
        text-align: center;
        color: black;
        display: block;
        position: absolute;
        font-size: $label-font-size;
        line-height: $label-font-size-redo*0.7;
        left: $label-font-size-redo / $default-outline;
        right: $label-font-size-redo / $default-outline;
        top: $label-font-size-redo / $default-outline;

        .smaller {
            font-size: $label-font-size*0.4;
            padding-bottom: 20px;
            vertical-align: super;
        }

    }

    .shadow {
        @include size(100%, 100%);
        border: $default-size / $default-outline solid #dadada;
        border-radius: 50%;
    }

}

.left-side {
    animation: left-side-progression $animation-duration $animation-ease both;
}
.right-side {
    animation: right-side-progression $animation-duration $animation-ease both; 
}
.pie {
    animation: pie-progression $animation-duration $animation-ease both;
}

@keyframes pie-progression {
    0% {
        clip: rect(auto, auto, auto, auto);
    }
    100% {
        @if $score > 50 {
          clip: rect(auto, auto, auto, auto);
        }

    }
}

@keyframes right-side-progression {
    0% {
        transform: rotate(180deg);
        border-color: $posColor;
    }
    100% {
        @if $score <= 50 {
            display: none;
        }
        @else {
            transform: rotate(180deg);
        }
        border-color: mix($posColor, $negColor, $score);
    }
}

@keyframes left-side-progression {
    0% {
        transform: rotate(360deg);
        border-color: $posColor;
    }
    100% {
        transform: rotate($score * 3.6deg);
        border-color: mix($posColor, $negColor, $score);
    }
}